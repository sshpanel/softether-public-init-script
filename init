#!/bin/bash

# Start the initializing sequences.


OSNAME=`lsb_release -s -i`
OSVERSION=`lsb_release -s -r`
OSCODENAME=`lsb_release -s -c`
SUPPORTEDVERSION="16.04 18.04"
INSTALLPACKAGE="curl git wget  expect nano openssl  python-setuptools python-pip perl zip unzip net-tools bc fail2ban augeas-tools libaugeas0 augeas-lenses firewalld build-essential acl passwd unattended-upgrades postfix make jq docker.io docker-compose"

# Updating dependencies, in case of the script is run directly.

function RandomString {
    head /dev/urandom | tr -dc _A-Za-z0-9 | head -c55
}


function Banner()
{
    echo -e "\e[91m #########################################################################\e[0m"
    echo -e "   \e[95m_______\e[0m  \e[95m_______\e[0m  __   __  _______  _______  __    _  _______  ___       "
    echo -e "  |       ||       ||  | |  ||       ||   \e[91m_\e[0m   ||  |  | ||       ||   |      "
    echo -e "  |  _____||  _____||  |_|  ||    \e[91m_\e[0m  ||  \e[91m|_|\e[0m  ||  |_|  ||    ___||   |      "
    echo -e "  | |_____ | |_____ |       ||   \e[91m|_|\e[0m ||       ||       ||   |___ |   |      "
    echo -e "  |_____  ||_____  ||       ||    ___||       ||  _    ||    ___||   |___   "
    echo -e "   _____| | _____| ||   _   ||   |    |   _   || | |   ||   |___ |       |  "
    echo -e "  |\e[95m_______\e[0m||\e[95m_______\e[0m||__| |__||___|    |__| |__||_|  |__||_______||_______|  "
    echo -e "                                                              \e[105m*V2.1 rev 14\e[0m"
    echo -e "\e[91m #########################################################################\e[0m"

    echo "\n"
    echo "Welcome to SSHPANEL Installation script!"
}

function Initializing() {
    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "INITIALIZING", "percentage": "20", "state": "INSTALLING_SOFTWARE"}'
}

function InstallPackages() {

    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "INSTALLING DEPENDENCIES", "percentage": "30"}'

    # Real Install
    apt-get install $INSTALLPACKAGE -y

}

function AllowServerAccess() {
    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "GRANT SERVER ACCESS", "percentage": "35"}'

    if [ ! -d "~/.ssh" ]
    then
        mkdir ~/.ssh && touch ~/.ssh/authorized_keys
    fi

    echo $SERVER_PUB >> ~/.ssh/authorized_keys
}

function SetupMonitoringServices() {
    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "INSTALLING MONITORING SERVICES", "percentage": "35"}'

    docker run -d -p 4210:80 --name sshpanel-monitoring sahsu/docker-phpsysinfo
}

Initializing

if [[ $EUID -ne 0 ]]; then
    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "[ERROR] PLEASE RUN THE INSTALLER SCRIPT AS ROOT!", "percentage": "0"}'
   exit 1
fi

if [[ $(uname -m) != "x86_64" ]]; then
    message="This installer only support x86_64 architecture"
    echo $message

    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "[ERROR] PLEASE RUN ONLY ON 64 BIT ARCHITECTURE!", "percentage": "0"}'
    exit 1
fi

grep -q $OSVERSION <<< $SUPPORTEDVERSION
if [[ $? -ne 0 ]]; then
    message="This installer does not support $OSNAME $OSVERSION"
    echo $message
    curl -4 -H "Content-Type: application/json" -X  POST $SSHPANEL_UPDATE -d '{"status": "[ERROR] INSTALLER DOES NOT SUPPORT $OSNAME $OSVERSION!", "percentage": "0"}'
    exit 1
fi

# Installing Dependencies
InstallPackages

# Allow Server Access
AllowServerAccess

# Install Monitoring Services


